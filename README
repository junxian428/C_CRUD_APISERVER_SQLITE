sudo apt-get install sqlite3 libsqlite3-dev


git clone https://github.com/DaveGamble/cJSON.git

mkdir build

cd build

cmake ..

make


sudo make install

-- Up-to-date: /usr/local/include/cjson/cJSON.h

-- Up-to-date: /usr/local/lib/pkgconfig/libcjson.pc

-- Up-to-date: /usr/local/lib/libcjson.so.1.7.18

-- Up-to-date: /usr/local/lib/libcjson.so.1

-- Up-to-date: /usr/local/lib/libcjson.so

-- Up-to-date: /usr/local/lib/cmake/cJSON/cjson.cmake

-- Up-to-date: /usr/local/lib/cmake/cJSON/cjson-noconfig.cmake

-- Up-to-date: /usr/local/lib/cmake/cJSON/cJSONConfig.cmake

-- Up-to-date: /usr/local/lib/cmake/cJSON/cJSONConfigVersion.cmake

_______________________________________________________________________

gcc HTTPServer.c -o main -lsqlite3 -L/usr/local/lib -lcjson

gcc HTTPServer.c -o main -lsqlite3 -lcjson

gcc HTTPServer.c -o main -lsqlite3 

gcc HTTPServer.c -o main -I/usr/local/include/cjson -I/usr/include/sqlite3 -L/usr/local/lib -lcjson -lsqlite3


GET Request 

http://localhost:8383/

POST REQUEST

{
    "id": 4,
    "name":"Forever NERD"
}

PUT REQUEST

{
    "id": 4,
    "name":"JUNXIAN"
}

DELETE

{
    "id": 4,
    "name":"JUNXIAN428"
}

DEBUGGER

GDB or VAVLGRIND

junxian428@LAPTOP-PVLCOKUM:~/LABHTTP$ valgrind ./main_v2

==8541== Memcheck, a memory error detector

==8541== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.

==8541== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info

==8541== Command: ./main_v2

==8541== 

Server is listening on port 3999

Received request: POST / HTTP/1.1

==8541== Thread 2:

==8541== Invalid read of size 1

==8541==    at 0x484ED16: strlen (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)

==8541==    by 0x10AA90: send_response (in /home/junxian428/LABHTTP/main_v2)

==8541==    by 0x109D4F: handle_request (in /home/junxian428/LABHTTP/main_v2)

==8541==    by 0x1096F5: thread_func (in /home/junxian428/LABHTTP/main_v2)

==8541==    by 0x4A54AC2: start_thread (pthread_create.c:442)

==8541==    by 0x4AE5A03: clone (clone.S:100)

==8541==  Address 0x0 is not stack'd, malloc'd or (recently) free'd

==8541== 

==8541== 

==8541== Process terminating with default action of signal 11 (SIGSEGV)

==8541==  Access not within mapped region at address 0x0

==8541==    at 0x484ED16: strlen (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)

==8541==    by 0x10AA90: send_response (in /home/junxian428/LABHTTP/main_v2)

==8541==    by 0x109D4F: handle_request (in /home/junxian428/LABHTTP/main_v2)

==8541==    by 0x1096F5: thread_func (in /home/junxian428/LABHTTP/main_v2)

==8541==    by 0x4A54AC2: start_thread (pthread_create.c:442)

==8541==    by 0x4AE5A03: clone (clone.S:100)

==8541==  If you believe this happened as a result of a stack

==8541==  overflow in your program's main thread (unlikely but

==8541==  possible), you can try to increase the size of the

==8541==  main thread stack using the --main-stacksize= flag.

==8541==  The main thread stack size used in this run was 8388608.

==8541== 
==8541== HEAP SUMMARY:

==8541==     in use at exit: 1,516 bytes in 9 blocks

==8541==   total heap usage: 566 allocs, 557 frees, 275,134 bytes allocated

==8541== 
==8541== LEAK SUMMARY:

==8541==    definitely lost: 0 bytes in 0 blocks

==8541==    indirectly lost: 0 bytes in 0 blocks

==8541==      possibly lost: 272 bytes in 1 blocks

==8541==    still reachable: 1,244 bytes in 8 blocks

==8541==         suppressed: 0 bytes in 0 blocks

==8541== Rerun with --leak-check=full to see details of leaked memory

==8541== 

==8541== For lists of detected and suppressed errors, rerun with: -s

==8541== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Segmentation fault


junxian428@LAPTOP-PVLCOKUM:~/LABHTTP$ valgrind ./main_v2 -leak-check=full

==8655== Memcheck, a memory error detector

==8655== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==8655== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==8655== Command: ./main_v2 -leak-check=full
==8655== 
Server is listening on port 3999
Received request: POST / HTTP/1.1
==8655== Thread 2:
==8655== Invalid read of size 1
==8655==    at 0x484ED16: strlen (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==8655==    by 0x10AA90: send_response (in /home/junxian428/LABHTTP/main_v2)
==8655==    by 0x109D4F: handle_request (in /home/junxian428/LABHTTP/main_v2)
==8655==    by 0x1096F5: thread_func (in /home/junxian428/LABHTTP/main_v2)
==8655==    by 0x4A54AC2: start_thread (pthread_create.c:442)
==8655==    by 0x4AE5A03: clone (clone.S:100)
==8655==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==8655== 
==8655== 
==8655== Process terminating with default action of signal 11 (SIGSEGV)
==8655==  Access not within mapped region at address 0x0
==8655==    at 0x484ED16: strlen (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==8655==    by 0x10AA90: send_response (in /home/junxian428/LABHTTP/main_v2)
==8655==    by 0x109D4F: handle_request (in /home/junxian428/LABHTTP/main_v2)
==8655==    by 0x1096F5: thread_func (in /home/junxian428/LABHTTP/main_v2)
==8655==    by 0x4A54AC2: start_thread (pthread_create.c:442)
==8655==    by 0x4AE5A03: clone (clone.S:100)
==8655==  If you believe this happened as a result of a stack
==8655==  overflow in your program's main thread (unlikely but
==8655==  possible), you can try to increase the size of the
==8655==  main thread stack using the --main-stacksize= flag.
==8655==  The main thread stack size used in this run was 8388608.
==8655== 
==8655== HEAP SUMMARY:
==8655==     in use at exit: 1,516 bytes in 9 blocks
==8655==   total heap usage: 566 allocs, 557 frees, 275,134 bytes allocated
==8655== 
==8655== LEAK SUMMARY:
==8655==    definitely lost: 0 bytes in 0 blocks
==8655==    indirectly lost: 0 bytes in 0 blocks
==8655==      possibly lost: 272 bytes in 1 blocks
==8655==    still reachable: 1,244 bytes in 8 blocks
==8655==         suppressed: 0 bytes in 0 blocks
==8655== Rerun with --leak-check=full to see details of leaked memory
==8655== 
==8655== For lists of detected and suppressed errors, rerun with: -s
==8655== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Segmentation fault